name: Deploy website
on:
  pull_request:
    types: 
      - opened
  workflow_dispatch:
  push: 
    branches:
      - main
      - 'dev-*' # triggers on all dev-
      - 'feature/**' # triggers on all branch that starts with feature/<any brnch>
    paths-ignore:
      - '.github/workflows/*' # will not trigger if the workflow file is changed
jobs:
  lint: 
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Installing nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Installing dependecies
        run: npm ci
      - name: Lint code base
        run: npm run lint
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Installing nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Installing dependecies
        run: npm ci
      - name: Run test
        run: npm test
  build: 
    needs: test
    runs-on: ubuntu-latest
    outputs:
      scritp-file: ${{ steps.publish.outputs.jsfile}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Installing nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Installing dependecies
        run: npm ci
      - name: Build Artifact 
        run: npm run build
      - name: Publish JS filename
        id  : publish
        run : find dist/assets/*.js -type f -execdir echo 'jsfile={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: dist-files
          path: dist
          # path: | # we need this pipe char to run multiple commands
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with: 
          name: dist-files # note this needs to needs to be the same name as above on build steps
      - name: Output contents
        run: ls
      - name: Output filename
        run : echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run : echo "Deploying...."